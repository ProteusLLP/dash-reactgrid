name: PR Tests

on:
    pull_request:
        branches: [main, dev]

jobs:
    quick-test:
        name: Quick Tests (PR)
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Python 3.10
              uses: actions/setup-python@v4
              with:
                  python-version: '3.10'

            - name: Cache pip dependencies
              uses: actions/cache@v3
              with:
                  path: ~/.cache/pip
                  key: ${{ runner.os }}-pip-3.10-${{ hashFiles('**/requirements.txt', '**/tests/requirements.txt') }}
                  restore-keys: |
                      ${{ runner.os }}-pip-3.10-
                      ${{ runner.os }}-pip-

            - name: Install system dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y \
                    chromium-browser \
                    chromium-chromedriver \
                    xvfb

            - name: Install Python dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -e .
                  pip install -r tests/requirements.txt

            - name: Run fast tests
              env:
                  DASH_TEST_HEADLESS: true
                  DASH_TEST_PROCESSES: 1
              run: |
                  xvfb-run -a python run_tests.py --fast

            - name: Run smoke tests
              env:
                  DASH_TEST_HEADLESS: true
                  DASH_TEST_PROCESSES: 1
              run: |
                  xvfb-run -a python run_tests.py --smoke

    lint-check:
        name: Code Quality
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Python 3.10
              uses: actions/setup-python@v4
              with:
                  python-version: '3.10'

            - name: Install linting tools
              run: |
                  python -m pip install --upgrade pip
                  pip install flake8 black isort

            - name: Check code formatting with Black
              run: |
                  black --check --diff tests/ || echo "Code formatting issues found (run 'black tests/' to fix)"

            - name: Check import sorting with isort
              run: |
                  isort --check-only --diff tests/ || echo "Import sorting issues found (run 'isort tests/' to fix)"

            - name: Lint with flake8
              run: |
                  flake8 tests/ --max-line-length=88 --extend-ignore=E203,W503 || echo "Linting issues found"

    security-check:
        name: Security Scan
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Python 3.10
              uses: actions/setup-python@v4
              with:
                  python-version: '3.10'

            - name: Install security tools
              run: |
                  python -m pip install --upgrade pip
                  pip install safety bandit

            - name: Check for security vulnerabilities
              run: |
                  safety check --file tests/requirements.txt || echo "Security vulnerabilities found"

            - name: Run bandit security linter
              run: |
                  bandit -r tests/ -f json -o bandit-report.json || echo "Security issues found"

            - name: Upload security report
              uses: actions/upload-artifact@v4
              if: always()
              with:
                  name: security-report
                  path: bandit-report.json
