name: Test Suite

on:
    push:
        branches: [main, dev]
    pull_request:
        branches: [main, dev]
    schedule:
        # Run tests daily at 2 AM UTC
        - cron: '0 2 * * *'

jobs:
    test:
        name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, windows-latest]
                python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
                exclude:
                    # Exclude some combinations to reduce build time
                    - os: windows-latest
                      python-version: '3.8'
                    - os: macos-latest
                      python-version: '3.8'

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Cache pip dependencies
              uses: actions/cache@v3
              with:
                  path: ~/.cache/pip
                  key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt', '**/tests/requirements.txt') }}
                  restore-keys: |
                      ${{ runner.os }}-pip-${{ matrix.python-version }}-
                      ${{ runner.os }}-pip-

            - name: Install system dependencies (Linux)
              if: runner.os == 'Linux'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y \
                    chromium-browser \
                    chromium-chromedriver \
                    xvfb

            - name: Install system dependencies (macOS)
              if: runner.os == 'macOS'
              run: |
                  brew install --cask google-chrome
                  brew install chromedriver

            - name: Install system dependencies (Windows)
              if: runner.os == 'Windows'
              run: |
                  choco install googlechrome
                  choco install chromedriver

            - name: Install Python dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -e .
                  pip install -r tests/requirements.txt

            - name: Verify installation
              run: |
                  python -c "import dash_reactgrid; print(f'✓ dash_reactgrid loaded from: {dash_reactgrid.__file__}')"
                  python -c "import dash; print(f'✓ dash version: {dash.__version__}')"
                  python -c "import selenium; print(f'✓ selenium version: {selenium.__version__}')"

            - name: Run fast tests (Linux/macOS)
              if: runner.os != 'Windows'
              run: |
                  xvfb-run -a python run_tests.py --fast --coverage
              continue-on-error: false

            - name: Run fast tests (Windows)
              if: runner.os == 'Windows'
              run: |
                  python run_tests.py --fast --coverage
              continue-on-error: false

            - name: Upload coverage to Codecov
              if: matrix.python-version == '3.10' && matrix.os == 'ubuntu-latest'
              uses: codecov/codecov-action@v3
              with:
                  file: ./coverage.xml
                  flags: unittests
                  name: codecov-umbrella
                  fail_ci_if_error: false

            - name: Upload test results
              uses: actions/upload-artifact@v4
              if: always()
              with:
                  name: test-results-${{ matrix.os }}-py${{ matrix.python-version }}
                  path: |
                      htmlcov/
                      test-report.html
                      coverage.xml

    performance-tests:
        name: Performance Tests
        runs-on: ubuntu-latest
        needs: test
        if: github.event_name == 'push' || github.event_name == 'schedule'

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Python 3.10
              uses: actions/setup-python@v4
              with:
                  python-version: '3.10'

            - name: Cache pip dependencies
              uses: actions/cache@v3
              with:
                  path: ~/.cache/pip
                  key: ${{ runner.os }}-pip-3.10-${{ hashFiles('**/requirements.txt', '**/tests/requirements.txt') }}

            - name: Install system dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y \
                    chromium-browser \
                    chromium-chromedriver \
                    xvfb

            - name: Install Python dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -e .
                  pip install -r tests/requirements.txt

            - name: Run performance tests
              run: |
                  xvfb-run -a python run_tests.py --suite performance --report

            - name: Upload performance test results
              uses: actions/upload-artifact@v4
              if: always()
              with:
                  name: performance-test-results
                  path: |
                      test-report.html
                      performance-metrics.json

    integration-tests:
        name: Integration Tests
        runs-on: ubuntu-latest
        needs: test

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Python 3.10
              uses: actions/setup-python@v4
              with:
                  python-version: '3.10'

            - name: Cache pip dependencies
              uses: actions/cache@v3
              with:
                  path: ~/.cache/pip
                  key: ${{ runner.os }}-pip-3.10-${{ hashFiles('**/requirements.txt', '**/tests/requirements.txt') }}

            - name: Install system dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y \
                    chromium-browser \
                    chromium-chromedriver \
                    xvfb

            - name: Install Python dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -e .
                  pip install -r tests/requirements.txt

            - name: Run integration tests
              run: |
                  xvfb-run -a python run_tests.py --suite integration --report

            - name: Upload integration test results
              uses: actions/upload-artifact@v4
              if: always()
              with:
                  name: integration-test-results
                  path: |
                      test-report.html

    smoke-tests:
        name: Smoke Tests (Quick Check)
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Python 3.10
              uses: actions/setup-python@v4
              with:
                  python-version: '3.10'

            - name: Install system dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y \
                    chromium-browser \
                    chromium-chromedriver \
                    xvfb

            - name: Install Python dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -e .
                  pip install -r tests/requirements.txt

            - name: Run smoke tests
              run: |
                  xvfb-run -a python run_tests.py --smoke

    compatibility-tests:
        name: Browser Compatibility
        runs-on: ubuntu-latest
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Python 3.10
              uses: actions/setup-python@v4
              with:
                  python-version: '3.10'

            - name: Install system dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y \
                    chromium-browser \
                    chromium-chromedriver \
                    firefox \
                    xvfb

            - name: Install Python dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -e .
                  pip install -r tests/requirements.txt

            - name: Run compatibility tests
              run: |
                  # Run basic tests with different browsers
                  xvfb-run -a python -m pytest tests/test_basic_functionality.py::TestBasicFunctionality::test_grid_renders -v
                  echo "Browser compatibility tests completed"

    test-summary:
        name: Test Summary
        runs-on: ubuntu-latest
        needs: [test, smoke-tests]
        if: always()

        steps:
            - name: Check test results
              run: |
                  echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
                  echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
                  echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
                  echo "| Main Tests | ${{ needs.test.result }} |" >> $GITHUB_STEP_SUMMARY
                  echo "| Smoke Tests | ${{ needs.smoke-tests.result }} |" >> $GITHUB_STEP_SUMMARY

                  if [ "${{ needs.test.result }}" == "success" ] && [ "${{ needs.smoke-tests.result }}" == "success" ]; then
                    echo "✅ All critical tests passed!" >> $GITHUB_STEP_SUMMARY
                  else
                    echo "❌ Some tests failed. Please check the logs." >> $GITHUB_STEP_SUMMARY
                    exit 1
                  fi
